{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/components/DeveloperConsole.js","BlockNumber.js","Metadata.js","NodeInfo.js","LatestBlockInfo.js","App.js","index.js"],"names":["configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","types","CUSTOM_TYPES","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","DeveloperConsole","util","utilCrypto","Main","finalized","useState","blockNumber","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","useEffect","unsubscribeAll","number","toNumber","unsub","catch","timer","time","id","setInterval","clearInterval","Grid","Column","Card","Content","textAlign","Statistic","label","extra","Icon","BlockNumber","data","version","metadata","setMetadata","getMetadata","Header","Meta","Modal","trigger","Button","scrolling","Description","JSON","stringify","Metadata","nodeInfo","setNodeInfo","Promise","all","system","nodeName","nodeVersion","getInfo","href","NodeInfo","latestBlock","setLatestBlock","subscribeNewHeads","header","Table","celled","striped","size","Body","Row","Cell","hash","toHuman","parentHash","extrinsicsRoot","stateRoot","LatestBlock","accountAddress","loader","getPair","text","Dimmer","active","Loader","centered","columns","padded","Message","negative","compact","floating","content","contextRef","createRef","ref","Sticky","context","Container","style","stackable","stretched","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd48ee3e.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\nimport queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.CUSTOM_TYPES,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }));\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts);\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>;\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate();\n  if (apiState === 'READY') { window.api = api; }\n  if (keyringState === 'READY') { window.keyring = keyring; }\n  window.util = require('@polkadot/util');\n  window.utilCrypto = require('@polkadot/util-crypto');\n\n  return null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const { finalized } = props;\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber());\n      setBlockNumberTimer(0);\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber]);\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1);\n  };\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label={(finalized ? 'Finalized' : 'Current') + ' Block'}\n            value={blockNumber}\n          />\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='time' /> {blockNumberTimer}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function BlockNumber (props) {\n  const { api } = useSubstrate();\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized ? (\n      <Main {...props} />\n    ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const [metadata, setMetadata] = useState({ data: null, version: null });\n\n  useEffect(() => {\n    const getMetadata = async () => {\n      try {\n        const data = await api.rpc.state.getMetadata();\n        setMetadata({ data, version: data.version });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getMetadata();\n  }, [api.rpc.state]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>Metadata</Card.Header>\n          <Card.Meta>\n            <span>v{metadata.version}</span>\n          </Card.Meta>\n        </Card.Content>\n        <Card.Content extra>\n          <Modal trigger={<Button>Show Metadata</Button>}>\n            <Modal.Header>Runtime Metadata</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <pre>\n                  <code>{JSON.stringify(metadata.data, null, 2)}</code>\n                </pre>\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function Metadata (props) {\n  const { api } = useSubstrate();\n  return api.rpc && api.rpc.state && api.rpc.state.getMetadata ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Card, Icon, Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const [nodeInfo, setNodeInfo] = useState({});\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([\n          api.rpc.system.chain(),\n          api.rpc.system.name(),\n          api.rpc.system.version()\n        ]);\n        setNodeInfo({ chain, nodeName, nodeVersion });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getInfo();\n  }, [api.rpc.system]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>{nodeInfo.nodeName}</Card.Header>\n          <Card.Meta>\n            <span>{nodeInfo.chain}</span>\n          </Card.Meta>\n          <Card.Description>\n            Built using the{' '}\n            <a href='https://github.com/substrate-developer-hub/substrate-front-end-template'>\n              Substrate Front End Template\n            </a>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='setting' />v{nodeInfo.nodeVersion}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function NodeInfo (props) {\n  const { api } = useSubstrate();\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.system.chain &&\n    api.rpc.system.name &&\n    api.rpc.system.version ? (\n      <Main {...props} />\n    ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Table } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n    const { api } = useSubstrate();\n    const { finalized } = props;\n    const [latestBlock, setLatestBlock] = useState(null);\n\n    useEffect(() => {\n        let unsubscribeAll = null;\n\n        // make a call to retrieve the current network head\n        api.rpc.chain.subscribeNewHeads((header) => {\n            console.log(`Chain is at #${header}`);\n            setLatestBlock(header);\n        }).then(unsub => {\n            unsubscribeAll = unsub;\n        }).catch(console.error);\n\n        return () => unsubscribeAll && unsubscribeAll();\n    }, []);\n\n    return (\n        <Grid.Column>\n            <h1>Block Data</h1>\n            {latestBlock && (\n                <Table celled striped size='small'>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell><b>Block</b></Table.Cell>\n                            <Table.Cell><b>#{latestBlock.number.toNumber()}</b></Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell><b>Hash</b></Table.Cell>\n                            <Table.Cell>{latestBlock.hash.toHuman()}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell><b>ParentHash</b></Table.Cell>\n                            <Table.Cell>{latestBlock.parentHash.toHuman()}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell><b>Extrinsics Root</b></Table.Cell>\n                            <Table.Cell>{latestBlock.extrinsicsRoot.toHuman()}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell><b>State Root</b></Table.Cell>\n                            <Table.Cell>{latestBlock.stateRoot.toHuman()}</Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n            )}\n        </Grid.Column>\n    );\n}\n\nexport default function LatestBlock(props) {\n    const { api } = useSubstrate();\n    return api.rpc &&\n        api.rpc.chain &&\n        api.rpc.chain.subscribeNewHeads ? (\n            <Main {...props} />\n        ) : null;\n}\n","import React, { useState, createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Sticky, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\n\nimport BlockNumber from './BlockNumber';\nimport Metadata from './Metadata';\nimport NodeInfo from './NodeInfo';\nimport LatestBlockInfo from './LatestBlockInfo';\n\nfunction Main () {\n  const [accountAddress, setAccountAddress] = useState(null);\n  const { apiState, keyring, keyringState, apiError } = useSubstrate();\n  const accountPair =\n    accountAddress &&\n    keyringState === 'READY' &&\n    keyring.getPair(accountAddress);\n\n  const loader = text =>\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>;\n\n  const message = err =>\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message negative compact floating\n          header='Error Connecting to Substrate'\n          content={`${JSON.stringify(err,null,4)}`}\n        />\n      </Grid.Column>\n    </Grid>;\n\n  if (apiState === 'ERROR') return message(apiError);\n  else if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n  if (keyringState !== 'READY') {\n    return loader('Loading accounts (please review any extension\\'s authorization)');\n  }\n\n  const contextRef = createRef();\n\n  return (\n      <div ref={contextRef}>\n      <Sticky context={contextRef}>\n      </Sticky>\n      <Container style={{\"margin-top\": \"20px\"}}>\n        <h1>Polkadot Network</h1>\n        <Grid stackable columns='equal'>\n          <Grid.Row stretched>\n            <NodeInfo />\n            <Metadata />\n            <BlockNumber />\n            <BlockNumber finalized />\n          </Grid.Row>\n          <Grid.Row>\n            <LatestBlockInfo/>\n          </Grid.Row>\n        </Grid>\n      </Container>\n      <DeveloperConsole />\n    </div>\n  );\n}\n\nexport default function App () {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}